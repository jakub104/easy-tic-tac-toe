{"version":3,"sources":["Components/App/index.js","serviceWorker.js","index.js"],"names":["AppComponent","styled","div","Round","Turn","Icon","span","Retry","FaSyncAlt","Cross","Line","Cells","Cell","keyframes","Winner","WinnerIcon","App","state","round","board","winner","retry","setState","document","querySelectorAll","forEach","box","innerHTML","style","cursor","color","pick","e","console","log","turn","element","getElementById","target","id","dataset","row","column","forceUpdate","check","animation","opacity","result","reduce","total","concat","moves","field","index","push","combination","every","indexOf","number","Math","floor","this","onClick","map","rowIndex","columnIndex","className","data-row","data-column","Component","Boolean","window","location","hostname","match","Global","createGlobalStyle","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fa06da5a.chunk.js","sourcesContent":["// BASIC\nimport React, { Component } from 'react'\nimport styled, {css, keyframes} from 'styled-components'\nimport {FaSyncAlt} from 'react-icons/fa'\n\nconst AppComponent = styled.div`\n\t@import url('https://fonts.googleapis.com/css?family=Sniglet:400,800&display=swap&subset=latin-ext');\n\twidth: 100vw;\n\theight: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\tfont-family: 'Sniglet', sans-serif;\n\tjustify-content: center;\n\talign-items: center;\n\tfont-size: 25px;\n`\nconst Round = styled.div`\n\tposition: absolute;\n\ttop: 30px;\n\tleft: 30px;\n`\nconst Turn = styled.div`\n\tposition: absolute;\n\ttop: 30px;\n\tright: 30px;\n`\nconst Icon = styled.span`\n\tfont-size: 25px;\n\tcolor: var(--color-decorative);\n`\nconst Retry = styled(FaSyncAlt)`\n\tposition: absolute;\n\ttop: 10vh;\n\tfont-size: 30px;\n\tcolor: var(--color-decorative);\n\ttransition: all 0.3s ease;\n\t:hover {\n\t\tcursor: pointer;\n\t\ttransform: rotate(45deg) scale(0.9);\n\t\topacity: 0.8;\n\t}\n`\nconst Cross = styled.div``\nconst Line = styled.div`\n\tposition: absolute;\n\tborder-radius: 20px;\n\t:nth-child(1),\n\t:nth-child(2) {\n\t\ttop: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\twidth: 5vmin;\n\t\tmax-width: 20px;\n\t\tbackground-color: var(--color-main);\n\t\theight: 90vmin;\n\t}\n\t:nth-child(3),\n\t:nth-child(4) {\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\twidth: 90vmin;\n\t\tbackground-color: var(--color-main);\n\t\theight: 5vmin;\n\t\tmax-height: 20px;\n\t}\n\t:nth-child(1) {\n\t\tleft: calc(50% - 15vmin);\n\t}\n\t:nth-child(2) {\n\t\tleft: calc(50% + 15vmin);\n\t}\n\t:nth-child(3) {\n\t\ttop: calc(50% - 15vmin);\n\t}\n\t:nth-child(4) {\n\t\ttop: calc(50% + 15vmin);\n\t}\n\t@media (min-width: 700px) {\n\t\t:nth-child(1),\n\t\t:nth-child(2) {\n\t\t\theight: 60vmin;\n\t\t}\n\t\t:nth-child(3),\n\t\t:nth-child(4) {\n\t\t\twidth: 60vmin;\n\t\t}\n\t\t:nth-child(1) {\n\t\t\tleft: calc(50% - 10vmin);\n\t\t}\n\t\t:nth-child(2) {\n\t\t\tleft: calc(50% + 10vmin);\n\t\t}\n\t\t:nth-child(3) {\n\t\t\ttop: calc(50% - 10vmin);\n\t\t}\n\t\t:nth-child(4) {\n\t\t\ttop: calc(50% + 10vmin);\n\t\t}\n\t}\n`\nconst Cells = styled.div`\n\twidth: 90vmin;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(3, 1fr);\n\tgrid-template-rows: repeat(3, 30vmin);\n\tcursor: pointer;\n\t@media (min-width: 700px) {\n\t\twidth: 60vmin;\n\t\tgrid-template-rows: repeat(3, 20vmin);\n\t}\n\t-webkit-tap-highlight-color: transparent;\n`\nconst show = keyframes`\n\tfrom {\n\t\topacity: 0;\n\t\ttransform: scale(0.9)\n\t}\n\tto {\n\t\topacity: 1;\n\t\ttransform: scale(1)\n\t}\n`\nconst Cell = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: none;\n\tposition: relative;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tfont-size: 60px;\n\topacity: 0;\n\ttransition: opacity 0.3s ease;\n`\nconst Winner = styled.div`\n\tposition: absolute;\n\tbottom: 30px;\n\ttext-align: center;\n`\nconst WinnerIcon = styled.div`\n\tfont-size: 25px;\n\tcolor: var(--color-decorative);\n\tfont-size: 40px;\n\tmargin: 0 10px;\n`\n\nclass App extends Component {\n\tstate = {\n\t\tround: 1,\n\t\tboard: [\n\t\t\t['', '', ''],\n\t\t\t['', '', ''],\n\t\t\t['', '', ''],\n\t\t],\n\t\twinner: null\n\t}\n\tretry = () => {\n\t\tthis.setState({\n\t\t\tround: 1,\n\t\t\tboard: [\n\t\t\t\t['', '', ''],\n\t\t\t\t['', '', ''],\n\t\t\t\t['', '', ''],\n\t\t\t],\n\t\t\twinner: null\n\t\t})\n\t\tdocument.querySelectorAll('.box').forEach((box) => {\n\t\t\tbox.innerHTML = '';\n\t\t\tbox.style.cursor = 'pointer';\n\t\t\tbox.style.color = 'var(--color-primary)';\n\t\t})\n\t}\n\tpick = (e) => {\n\t\tconsole.log('winner: ', this.state.winner);\n\t\tif (!this.state.winner) {\n\t\t\tconst turn = this.state.round % 2 !== 0 ? \"player1\" : \"player2\";\n\t\t\tconsole.log(turn);\n\t\t\tconst element = document.getElementById(e.target.id);\n\t\t\tif (!element.innerHTML) {\n\t\t\t\tconst {row, column} = e.target.dataset;\n\t\t\t\tconsole.log(row, column);\n\t\t\t\tthis.state.round < 9 ? this.setState({round: this.state.round + 1}) : this.setState({winner: 'lost'})\n\t\t\t\tthis.state.board[row][column] = turn;\n\t\t\t\tthis.forceUpdate();\n\t\t\t\tconsole.log(this.state.board);\n\t\t\t\tthis.check();\n\t\t\t\tthis.state.round % 2 === 0 ? element.innerHTML=\"o\" : element.innerHTML=\"x\"\n\t\t\t\telement.style.animation = `show 0.3s ease`;\n\t\t\t\telement.style.opacity = 1;\n\t\t\t\telement.style.cursor = \"default\";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdocument.querySelectorAll('.box').forEach((box) => box.style.cursor = 'default')\n\t\t}\n\t}\n\tcheck = () => {\n\t\tconst combinations = [\n\t\t\t// poziomo\n\t\t\t[0,1,2], [3,4,5], [6,7,8],\n\t\t\t// pionowo\n\t\t\t[0,3,6], [1,4,7], [2,5,8],\n\t\t\t// na skos\n\t\t\t[0,4,8], [2,4,6]\n\t\t] \n\t\tconst result = this.state.board.reduce((total, row) => total.concat(row));\n\t\tlet moves = {\n\t\t\t'player1': [],\n\t\t\t'player2': []\n\t\t}\n\t\tresult.forEach((field, index) => moves[field] ? moves[field].push(index) : null);\n\t\tcombinations.forEach(combination => {\n\t\t\tif (combination.every(index => moves['player1'].indexOf(index) > -1)) {\n\t\t\t\tthis.setState({winner: 'player1'})\n\t\t\t\tcombination.forEach(number => {\n\t\t\t\t\tdocument.getElementById(`r${Math.floor(number/3)}c${number % 3}`).style.color = 'var(--color-decorative)';\n\t\t\t\t})\n\t\t\t}\n\t\t\telse if (combination.every(index => moves['player2'].indexOf(index) > -1)) {\n\t\t\t\tthis.setState({winner: 'player2'});\n\t\t\t\tcombination.forEach(number => {\n\t\t\t\t\tdocument.getElementById(`r${Math.floor(number/3)}c${number % 3}`).style.color = 'var(--color-decorative)';\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t}\n\trender() {\n\t\tconst board = this.state.board;\n\t\treturn (\n\t\t\t<AppComponent>\n\t\t\t\t<Round>Runda: {this.state.winner ? <Icon>-</Icon> : <Icon>{this.state.round}</Icon>}</Round>\n\t\t\t\t<Turn>Ruch: {this.state.winner ? <Icon>-</Icon> : this.state.round % 2 === 0 ? <Icon>o</Icon> : <Icon>x</Icon>}</Turn>\n\t\t\t\t<Retry onClick={this.retry} />\n\t\t\t\t<Cross>\n\t\t\t\t\t<Line />\n\t\t\t\t\t<Line />\n\t\t\t\t\t<Line />\n\t\t\t\t\t<Line />\n\t\t\t\t</Cross>\n\t\t\t\t<Cells>\n\t\t\t\t\t{board.map((row, rowIndex) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\trow.map((column, columnIndex) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\t\t\t\tid={`r${rowIndex}c${columnIndex}`}\n\t\t\t\t\t\t\t\t\t\tclassName=\"box\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.pick}\n\t\t\t\t\t\t\t\t\t\tdata-row={rowIndex}\n\t\t\t\t\t\t\t\t\t\tdata-column={columnIndex}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</Cells>\n\t\t\t\t\n\t\t\t\t{this.state.winner === 'player1' ? (\n\t\t\t\t\t<Winner>\n\t\t\t\t\t\tWygrywa:\n\t\t\t\t\t\t<WinnerIcon>x</WinnerIcon>\n\t\t\t\t\t</Winner>\n\t\t\t\t) : this.state.winner === 'player2' ? (\n\t\t\t\t\t<Winner>\n\t\t\t\t\t\tWygrywa:\n\t\t\t\t\t\t<WinnerIcon>o</WinnerIcon>\n\t\t\t\t\t</Winner>\n\t\t\t\t) : this.state.winner === 'lost' ? (\n\t\t\t\t\t<Winner>\n\t\t\t\t\t\tRemis!\n\t\t\t\t\t\t<WinnerIcon>o x</WinnerIcon>\n\t\t\t\t\t</Winner>\n\t\t\t\t) : ''}\n\t\t\t\t\n\t\t\t</AppComponent>\n\t\t);\n\t}\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createGlobalStyle} from 'styled-components'\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst Global = createGlobalStyle`\n\t* {\n\t\t/* --color-main: #ff4d4d; */\n\t\t--color-main: MediumOrchid;\n\t\t--color-decorative: gold;\n\t\t--color-primary: lightgray;\n\t\t--color-secondary: gray;\n\t\t--color-bg: #202020;\n\t\t--color-light: white;\n\t\t--color-dark: black;\n\t\tbox-sizing: border-box;\n\t\t::after,\n\t\t::before {\n\t\t\tbox-sizing: border-box;\n\t\t}\n\t}\n\tbody {\n\t\tbackground-color: var(--color-bg);\n\t\tcolor: var(--color-primary);\n\t\twidth: 100vw;\n\t\theight: 100vh;\n\t\tmargin: 0\n\t}\n`\n\nReactDOM.render(\n\t<>\n\t\t<Global />\n\t\t<App />\n\t</>,\n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}